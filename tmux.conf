# SHELL {{{
set -g default-terminal "tmux-256color"
set -sa terminal-overrides ",xterm*:Tc"
# }}}

# TMUX PREFIX SHORTCUT {{{
set -g prefix C-a               # Set prefix to ctrl-a
unbind C-b                      # Unset default
bind C-a send-prefix            # Press ctrl-a twice to use it in an application
# }}}

# BASIC SETTINGS {{{
set -g base-index 1                           # Window index starts at 1 instead of 0
set -g pane-base-index 1                      # Pane index starts at 1 instead of 0
setw -g mode-keys vi                          # Use Vi-style shortcut keys for movement in buffer
set-window-option -g automatic-rename off     # Don't automatically rename windows
set-option -g allow-rename off
set -g default-shell $SHELL                   # Set default shell to $SHELL
set-option -g renumber-windows on
# }}}

# CLIPBOARD {{{
setw -g mode-keys vi
bind Escape copy-mode
unbind p
unbind [
unbind ]
bind p paste-buffer
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcop
# }}}

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set-option -s escape-time 0
# }}}

# RELOAD SHORTCUT {{{
bind r source-file ~/.tmux.conf \; display "Reloaded!"    # Shortcut to reload tmux conf

# MOUSE SETTINGS & SHORTCUTS {{{
set -g mouse on
# }}}

# WINDOW SHORTCUTS {{{
# Prefix Ctrl-h and Prefix Ctrl-l to cycle through windows
unbind n
bind -r [ select-window -t :-
bind -r ] select-window -t :+
unbind c
bind n new-window -n 'SHELL'

# swap window to left or right
# leader < and >
bind-key -r < swap-window -d -t -1
bind-key -r > swap-window -d -t +1
# }}}

# NAVIGATION WITH VIM {{{
# =============================================
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# }}}

# SPLIT PANE SHORTCUTS {{{
# =============================================
bind | split-window -h          # Split horizontal
bind - split-window -v          # Split vertical
bind c kill-pane                # Close the current pane
# Re-map pane movement keys to the home row (hjkl)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# Resizing Panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 6

# Maximize / Restore a pane
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
# }}}

# STATUS BAR CONTENT {{{
# set -g status-left '|#S|'
set -g status-left ' #[bold,fg=colour1]#S â†’'
set -g status-left-length 32
set -g status-right-length 150
set -g status-right '#{cpu_fg_color} CPU #{cpu_percentage} #[fg=default]| #{ram_fg_color}RAM #{ram_percentage}#[fg=default] | #(/usr/local/bin/battery -t) |#(uptime | sed -e "s/^ *//" | cut -f 1 -d , | cut -f 2- -d " ") | %b %d %l:%M %p '
set -g window-status-format "  #W  "
set -g window-status-current-format "  #[bold] #W  "
set -g status-justify left
# }}}

# COLORS {{{
# https://gist.github.com/paulrouget/cc3cf124e0789c5dc1d387c2180f132b
set -g status-position bottom
set -g status-style default,fg="#666666",bg=default
set -g window-status-style default,fg="#666667",bg=default
# set-window-option -g window-status-attr default ???
setw -g window-status-current-style default,fg="#BD92F8",bg=default
# set-window-option -g window-status-current-fg "#A52B29" # Solarized
# set-window-option -g window-status-current-attr default
set -g message-style bold,fg=white,bg=white
# setw -g window-status-format         ' #(echo "#{pane_current_command}") '
# setw -g window-status-current-format ' #(echo "#{pane_current_command}") '
# set -g status-right " "
# }}}

# PLUGINS {{{
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-cpu'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# }}}

# vim:fileencoding=utf-8:ft=conf:foldmethod=marker
